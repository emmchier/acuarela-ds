import{j as e,g as b,a as I,B as S,C as Re,b as Me,c as je}from"./Button-30b3b641.js";import{r as y}from"./index-76fb7be0.js";import"./_commonjsHelpers-de833af9.js";const g=({type:V="text",variant:Q="outlined",state:a="default",name:f="",ref:W,value:v,minValue:X,maxValue:Y,defaultValue:Z,placeholder:ee,maxLength:ae,minLength:ne,pattern:te,label:le="",labelClassName:re="",charCounterMin:we,charCounterMax:Be,prefix:x="",action:n=null,helperText:_e="",helperTextAlign:$e="end",focusColor:Fe="primary",hideLabel:ie=!1,required:ue=!1,readOnly:oe=!1,autoFocus:se=!1,resetButton:q=!0,charCounter:ke=!1,tabIndex:de=0,ariaLabel:ce="",elevation:T=0,textColor:me="",bgColor:pe="",borderSize:fe,size:h="md",borderColor:ve="",borderRadius:C="sm",className:he="",style:be,disabled:L=!1,ariaLabelAction:ye="",onClick:ge=()=>{},onMouseEnter:Ve=()=>{},onMouseLeave:xe=()=>{},onKeyDown:qe=()=>{},onKeyUp:Te=()=>{},onChange:Ce=()=>{},onSubmit:Le=()=>{},onFocus:Ie=()=>{},onBlur:Se=()=>{},onClickAction:t=void 0})=>{const[l,r]=y.useState(v||"");y.useEffect(()=>{r(l)},[l]),y.useEffect(()=>{r(v||"")},[v]);const Ne=i=>{r(i.target.value)},ze=()=>{r("")},Ee=()=>[he,"acInput",b(h),I(C),je(Q),a||"",T?`elevation${T}`:"",L?"disabled":"",q||n||a?"adjustRightPadding":"",x?"adjustLeftPadding":""].filter(Boolean).join(" "),Ae={color:me,backgroundColor:pe,border:`${fe}px solid ${ve}`,...be};return e.jsxs("div",{className:"inputGroup",children:[e.jsx("label",{htmlFor:f,className:`inputFieldLabel ${re} ${ie&&"hideLabel"} ${a} ${b(h)} ${I(C)}`,children:le}),e.jsxs("div",{className:`inputField ${b(h)}`,children:[e.jsx("input",{type:V,ref:W,id:f,name:f,defaultValue:Z,placeholder:ee,maxLength:ae,minLength:ne,pattern:te,min:X,max:Y,required:ue,readOnly:oe,autoFocus:se,autoComplete:"off",tabIndex:de,className:Ee(),style:Ae,"aria-label":ce,"aria-disabled":L?"true":"false",value:l,onChange:i=>{Ne(i),Ce(i)},onSubmit:Le,onFocus:Ie,onBlur:Se,onClick:ge,onKeyDown:qe,onKeyUp:Te,onMouseEnter:Ve,onMouseLeave:xe}),e.jsx("div",{className:"prefix",children:x}),e.jsx("div",{className:"actions",children:q?l&&e.jsx(S,{onClick:ze,className:"resetBtn",ariaLabel:l?"Reset value":"",variant:"ghost",borderRadius:"full",size:"xs",iconButton:!0,children:e.jsx(Re,{size:"xs"})}):e.jsx(S,{onClick:t,className:`inputAction ${n&&typeof t=="function"&&t!==void 0?"":"disableAction"}`,ariaLabel:ye,variant:n&&typeof t=="function"&&t!==void 0?"ghost":"none",borderRadius:"full",size:"xs",iconButton:!0,children:n||Me(a)})})]})]})};try{g.displayName="Input",g.__docgenInfo={description:"",displayName:"Input",props:{type:{defaultValue:{value:"text"},description:"The input type",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"submit"'},{value:'"reset"'},{value:'"text"'},{value:'"password"'},{value:'"email"'}]}},variant:{defaultValue:{value:"outlined"},description:"Indicates different input styled variants",name:"variant",required:!1,type:{name:"enum",value:[{value:'"contained"'},{value:'"outlined"'},{value:'"text"'},{value:'"underline"'},{value:'"shadow"'}]}},borderRadius:{defaultValue:{value:"sm"},description:"The input border radius",name:"borderRadius",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"full"'}]}},state:{defaultValue:{value:"default"},description:`Indicates an specific input action with color and icon
Action only shows if "resetButton" prop is setting to false`,name:"state",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"success"'},{value:'"error"'},{value:'"warning"'},{value:'"info"'}]}},helperTextAlign:{defaultValue:{value:"end"},description:"The helper text aligment on the right or left",name:"helperTextAlign",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"end"'}]}},focusColor:{defaultValue:{value:"primary"},description:"Indicates the border color when input is in focus state",name:"focusColor",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'},{value:'"warning"'},{value:'"info"'},{value:'"primary"'},{value:'"secondary"'}]}},label:{defaultValue:{value:""},description:"The asociated input label vital for screen readers",name:"label",required:!1,type:{name:"string"}},labelClassName:{defaultValue:{value:""},description:"The asociated input label className for additional CSS propieties",name:"labelClassName",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"The input id",name:"id",required:!1,type:{name:"string | number"}},ref:{defaultValue:null,description:"Gets an html input ref for different actions",name:"ref",required:!1,type:{name:"any"}},name:{defaultValue:{value:""},description:"The input name important to form field references",name:"name",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The input value for fill it",name:"value",required:!1,type:{name:"string | number"}},defaultValue:{defaultValue:null,description:"The input default value",name:"defaultValue",required:!1,type:{name:"string | number"}},placeholder:{defaultValue:null,description:"Indicates the input field tematic",name:"placeholder",required:!1,type:{name:"string"}},maxLength:{defaultValue:null,description:"The input maximum character length",name:"maxLength",required:!1,type:{name:"number"}},minLength:{defaultValue:null,description:"The input minimum character length",name:"minLength",required:!1,type:{name:"number"}},pattern:{defaultValue:null,description:"Indicates an specific character pattern to show the input content",name:"pattern",required:!1,type:{name:"string"}},minValue:{defaultValue:null,description:"The minimun number value admited",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"The maximum number value admited",name:"maxValue",required:!1,type:{name:"number"}},required:{defaultValue:{value:"false"},description:"Indicates if input value is required to fill",name:"required",required:!1,type:{name:"boolean"}},hideLabel:{defaultValue:{value:"false"},description:"Indicates if asociated input label is showing or not",name:"hideLabel",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:{value:"false"},description:"Indicates if input is invalid to fill by read only state",name:"readOnly",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:{value:"false"},description:"Indicates if input ready to fill in focus state",name:"autoFocus",required:!1,type:{name:"boolean"}},resetButton:{defaultValue:{value:"true"},description:`Action button for reset input values.
Is setting by default.`,name:"resetButton",required:!1,type:{name:"boolean"}},charCounter:{defaultValue:{value:"false"},description:"The input character counter",name:"charCounter",required:!1,type:{name:"boolean"}},charCounterMin:{defaultValue:null,description:"Indicates the value from start counter",name:"charCounterMin",required:!1,type:{name:"number"}},charCounterMax:{defaultValue:null,description:"Indicates the value from end counter",name:"charCounterMax",required:!1,type:{name:"number"}},helperText:{defaultValue:{value:""},description:"A small text to show additional input information as errors and others",name:"helperText",required:!1,type:{name:"string"}},prefix:{defaultValue:{value:""},description:"An html element at the beginning of input text",name:"prefix",required:!1,type:{name:"ReactNode | ReactNode[]"}},action:{defaultValue:{value:"null"},description:"Icon actions as buttons or read only",name:"action",required:!1,type:{name:"ReactNode | ReactNode[]"}},ariaLabelAction:{defaultValue:{value:""},description:"The action icon ARIA label special for screen readers",name:"ariaLabelAction",required:!1,type:{name:"string"}},onClickAction:{defaultValue:{value:"undefined"},description:"The action icon onClick handler function",name:"onClickAction",required:!1,type:{name:"(() => void)"}},onSubmit:{defaultValue:{value:"() => {}"},description:"The input submit handler function",name:"onSubmit",required:!1,type:{name:"((event: any) => void)"}},onFocus:{defaultValue:{value:"() => {}"},description:"The input onFocus handler function",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>) => void)"}},onChange:{defaultValue:{value:"() => {}"},description:"The input onChange handler function",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},onBlur:{defaultValue:{value:"() => {}"},description:"The input onBlur handler function",name:"onBlur",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},tabIndex:{defaultValue:{value:"0"},description:"The order to navigate for one component to another by screen readers",name:"tabIndex",required:!1,type:{name:"number"}},ariaLabel:{defaultValue:{value:""},description:"The component ARIA label special for screen readers",name:"ariaLabel",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The component content",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},size:{defaultValue:{value:"md"},description:"The component size",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'}]}},textColor:{defaultValue:{value:""},description:"The component text color",name:"textColor",required:!1,type:{name:"string"}},bgColor:{defaultValue:{value:""},description:"The component background color",name:"bgColor",required:!1,type:{name:"string"}},borderColor:{defaultValue:{value:""},description:"The component border color",name:"borderColor",required:!1,type:{name:"string"}},borderSize:{defaultValue:null,description:"The component border size",name:"borderSize",required:!1,type:{name:"number"}},elevation:{defaultValue:{value:"0"},description:"Indicates if component has shadow elevation",name:"elevation",required:!1,type:{name:"number"}},disabled:{defaultValue:{value:"false"},description:"Indicates if component is disabled",name:"disabled",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"Additional styles for the component",name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:{value:""},description:"Additional CSS classes for the component",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:{value:"() => {}"},description:"The component click handler function",name:"onClick",required:!1,type:{name:"(() => void)"}},onMouseEnter:{defaultValue:{value:"() => {}"},description:"The component mouseEnter handler function",name:"onMouseEnter",required:!1,type:{name:"(() => void)"}},onMouseLeave:{defaultValue:{value:"() => {}"},description:"The component mouseLeave handler function",name:"onMouseLeave",required:!1,type:{name:"(() => void)"}},onKeyDown:{defaultValue:{value:"() => {}"},description:"The component keyDown handler function",name:"onKeyDown",required:!1,type:{name:"(() => void)"}},onKeyUp:{defaultValue:{value:"() => {}"},description:"The component keyUp handler function",name:"onKeyUp",required:!1,type:{name:"(() => void)"}}}}}catch{}const He={title:"Input",component:g,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{variant:{control:"inline-radio"},elevation:{control:"boolean"},size:{control:"inline-radio"},borderRadius:{control:"inline-radio"},disabled:{control:"boolean"}}},u={args:{label:"Label",variant:"contained"}},o={args:{label:"Label",variant:"outlined"}},s={args:{label:"Label",variant:"text"}},d={args:{label:"Label",size:"xs"}},c={args:{label:"Label",size:"sm"}},m={args:{label:"Label",size:"md"}},p={args:{label:"Label",size:"lg"}};var N,z,E;u.parameters={...u.parameters,docs:{...(N=u.parameters)==null?void 0:N.docs,source:{originalSource:`{
  args: {
    label: 'Label',
    variant: 'contained'
  }
}`,...(E=(z=u.parameters)==null?void 0:z.docs)==null?void 0:E.source}}};var A,R,M;o.parameters={...o.parameters,docs:{...(A=o.parameters)==null?void 0:A.docs,source:{originalSource:`{
  args: {
    label: 'Label',
    variant: 'outlined'
  }
}`,...(M=(R=o.parameters)==null?void 0:R.docs)==null?void 0:M.source}}};var j,w,B;s.parameters={...s.parameters,docs:{...(j=s.parameters)==null?void 0:j.docs,source:{originalSource:`{
  args: {
    label: 'Label',
    variant: 'text'
  }
}`,...(B=(w=s.parameters)==null?void 0:w.docs)==null?void 0:B.source}}};var _,$,F;d.parameters={...d.parameters,docs:{...(_=d.parameters)==null?void 0:_.docs,source:{originalSource:`{
  args: {
    label: 'Label',
    size: 'xs'
  }
}`,...(F=($=d.parameters)==null?void 0:$.docs)==null?void 0:F.source}}};var k,O,K;c.parameters={...c.parameters,docs:{...(k=c.parameters)==null?void 0:k.docs,source:{originalSource:`{
  args: {
    label: 'Label',
    size: 'sm'
  }
}`,...(K=(O=c.parameters)==null?void 0:O.docs)==null?void 0:K.source}}};var D,H,P;m.parameters={...m.parameters,docs:{...(D=m.parameters)==null?void 0:D.docs,source:{originalSource:`{
  args: {
    label: 'Label',
    size: 'md'
  }
}`,...(P=(H=m.parameters)==null?void 0:H.docs)==null?void 0:P.source}}};var U,G,J;p.parameters={...p.parameters,docs:{...(U=p.parameters)==null?void 0:U.docs,source:{originalSource:`{
  args: {
    label: 'Label',
    size: 'lg'
  }
}`,...(J=(G=p.parameters)==null?void 0:G.docs)==null?void 0:J.source}}};const Pe=["Contained","Outlined","Text","ExtraSmall","Small","Medium","Large"];export{u as Contained,d as ExtraSmall,p as Large,m as Medium,o as Outlined,c as Small,s as Text,Pe as __namedExportsOrder,He as default};
//# sourceMappingURL=Input.stories-51b9e180.js.map
